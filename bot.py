import asyncio
import logging
from collections import defaultdict
from aiogram import Bot, Dispatcher, Router, types, F
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ChatMemberUpdated
from aiogram.client.default import DefaultBotProperties

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
TOKEN="7754219638:AAHlCG9dLX-wJ4f6zuaPQDARkB-WtNshv8o"
CHANNEL_ID=-1002423189514
ADMIN_ID=5320545212
DATA_FILE = 'user_data.json'
ADMINS = [5320545212, 5402160054 ]

def start_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–†–∞–∑–º–µ—Å—Ç–∏—Ç—å –∑–∞–¥–∞—á—É", callback_data="show_admin")],
        [InlineKeyboardButton(text="–ù–∞–π—Ç–∏ –ø–æ–¥—Ä–∞–±–æ—Ç–∫—É", url="https://t.me/tezJumush")]
    ])

# /start
@router.message(Command("start"))
async def start(message: types.Message):
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –±–æ—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã Tez Jumush. –•–æ—á–µ—à—å –Ω–∞–π—Ç–∏ –ø–æ–º–æ—â–Ω–∏–∫–∞ –∏–ª–∏ –ø–æ–¥—Ä–∞–±–æ—Ç–∫—É?", reply_markup=start_keyboard())

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
@router.message(StateFilter(None), F.text & ~F.text.startswith("/"))
async def delete_message(message: types.Message):
    if message.from_user.id not in ADMINS:
        await message.delete()
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="–ü–µ—Ä–µ–π–¥–∏—Ç–µ –∫ –±–æ—Ç—É", url="https://t.me/fisicalJob_bot")]
        ])
        msg = await message.answer("–ß—Ç–æ–±—ã —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –∫ –±–æ—Ç—É.", reply_markup=keyboard)
        await asyncio.sleep(100)
        await msg.delete()

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
@router.callback_query(F.data == "show_admin")
async def show_admin(cb: types.CallbackQuery):
    admin_id = ADMIN_ID  # Admin's Telegram ID
    await cb.message.answer(
        "–ë–æ—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ –≤ —Ä–µ–º–æ–Ω—Ç–µ, –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –≤—ã–ª–æ–∂–∏—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º. –ò –º—ã –≤—Å–µ –≤—ã–ª–æ–∂–∏–º",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="–ù–∞–ø–∏—Å–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É", url=f"tg://user?id={admin_id}")]
        ])
    )
    await cb.answer()

@router.callback_query(F.data == "add_contacts")
async def add_contacts(cb: types.CallbackQuery):
    await cb.message.answer(
        "–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –¥–æ–±–∞–≤—å—Ç–µ 1 —á–µ–ª–æ–≤–µ–∫–∞ –≤ –Ω–∞—à—É –≥—Ä—É–ø–ø—É, –∑–∞—Ç–µ–º –≤–µ—Ä–Ω–∏—Ç–µ—Å—å —Å—é–¥–∞.",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É", url="https://t.me/tezJumush")],
            [InlineKeyboardButton(text="–í—Å–µ –≥–æ—Ç–æ–≤–æ –¥–æ–±–∞–≤–∏–ª", callback_data="track_invites")]
        ])
    )
    await cb.answer()